---
- name: Moodle Config Set with Moosh for Local Docker Container
  hosts: webservers
  connection: local
  tasks:
    - name: Set custom facts
      set_fact:
        moodle_path: /var/www/html # from docker compose project
        dataroot_path: /var/www/moodledata # from config-docker.php
        french_pack_url: https://download.moodle.org/langpack/3.11/fr.zip
        custom_pack_url: https://github.com/e-PSHAD/pad-infra/raw/main/lang/customlang_fr.zip
        moosh_config_file: pad_config_vars.yml
      tags: always

    - name: Language pack installation
      tags: lang
      block:
      - name: Install french language pack
        community.docker.docker_container_exec:
          container: "{{ docker.webserver_name }}"
          command: >
            /bin/bash -c
            "curl -L -o fr.zip {{ french_pack_url }} && unzip -o -d lang fr.zip && rm fr.zip"
          chdir: "{{ dataroot_path }}"

      - name: Install customized strings for language pack
        community.docker.docker_container_exec:
          container: "{{ docker.webserver_name }}"
          command: >
            /bin/bash -c
            "curl -L -o customlang_fr.zip {{ custom_pack_url }} && unzip -o -d lang/fr_local customlang_fr.zip && rm customlang_fr.zip"
          chdir: "{{ dataroot_path }}"

      - name: Set access rights on newly installed language packs
        community.docker.docker_container_exec:
          container: "{{ docker.webserver_name }}"
          command: /bin/bash -c "chown -R www-data:www-data lang"
          chdir: "{{ dataroot_path }}"

      - name: Purge language string cache
        community.docker.docker_container_exec:
          container: "{{ docker.webserver_name }}"
          command: /bin/bash -c "php admin/cli/purge_caches.php --lang"
          chdir: "{{ moodle_path }}"

    # Moosh config set
    - name: Load config var from file
      include_vars:
        file: "{{ moosh_config_file }}"
      tags: [ config, capabilities ]

    - name: Set config with Moosh
      community.docker.docker_container_exec:
        container: "{{ docker.webserver_name }}"
        command: >
          /bin/bash -c
          "moosh -n config-set {{ item.key }} "{{ item.value }}" {{ item.plugin | default('core') }}"
        chdir: "{{ moodle_path }}"
      loop: "{{ config }}"
      register: result
      tags: config
    - debug: var=result.msg
      tags: config

    # Moosh capabilities set
    - name: Set capabilities with Moosh
      community.docker.docker_container_exec:
        container: "{{ docker.webserver_name }}"
        command: >
          /bin/bash -c
          "moosh -n role-update-capability {{ item.role }} {{ item.capability }} {{ item.value }} {{ item.contextid | default(1) }}"
        chdir: "{{ moodle_path }}"
      loop: "{{ capabilities }}"
      register: result
      tags: capabilities
    - debug: var=result.msg
      tags: capabilities

    - name: Update Student context level to category
      community.docker.docker_container_exec:
        container: "{{ docker.webserver_name }}"
        command: >
          /bin/bash -c
          "moosh -n role-update-contextlevel --category-on student"
        chdir: "{{ moodle_path }}"
      register: result
      tags: capabilities
    - debug: var=result.stdout
      tags: capabilities

    - name: Set editingteacher self-assign role
      tags: [capabilities, sql]
      block:
      - name: Retrieve editingteacher id
        community.docker.docker_container_exec:
          container: "{{ docker.webserver_name }}"
          command: >
            /bin/bash -c
            "moosh -n sql-run \"SELECT ID FROM {{ db_config.table_prefix }}role WHERE shortname = 'editingteacher'\" | awk '/id/ {print $NF}'"
          chdir: "{{ moodle_path }}"
        register: result
      - set_fact: editingteacher_id="{{ result.stdout }}"
      - debug: var=editingteacher_id

      - name: Retrieve status for editingteacher self-assign role
        community.docker.docker_container_exec:
          container: "{{ docker.webserver_name }}"
          command: >
            /bin/bash -c
            "moosh -n sql-run \"SELECT ID FROM {{ db_config.table_prefix }}role_allow_assign WHERE roleid = {{ editingteacher_id }} AND allowassign = {{ editingteacher_id }}\""
          chdir: "{{ moodle_path }}"
        register: result
      - set_fact: editingteacher_self_assign_isset="{{ result.stdout }}"

      - name: Set editingteacher role assign if needed
        community.docker.docker_container_exec:
          container: "{{ docker.webserver_name }}"
          command: >
            /bin/bash -c
            "moosh -n sql-run \"INSERT INTO {{ db_config.table_prefix }}role_allow_assign (roleid, allowassign) VALUES ({{ editingteacher_id }}, {{ editingteacher_id }})\""
          chdir: "{{ moodle_path }}"
        when: editingteacher_self_assign_isset == ''
